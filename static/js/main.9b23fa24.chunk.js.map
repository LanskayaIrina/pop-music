{"version":3,"sources":["redux/auth/reducer.js","redux/videos/reducer.js","redux/checkedUser/reducer.js","redux/favorites/reducer.js","redux/rememberedUser/reducer.js","redux/theme/reducer.js","redux/reducers.js","redux/auth/actionTypes.js","redux/videos/actionTypes.js","redux/checkedUser/actionTypes.js","redux/rememberedUser/actionTypes.js","redux/favorites/actionTypes.js","redux/theme/actionTypes.js","redux/store.js","routes/logIn/Login.jsx","redux/auth/actions.js","services/HttpService.js","redux/checkedUser/actions.js","routes/logIn/index.js","redux/rememberedUser/actions.js","components/formRegister/FormRegister.jsx","components/formRegister/index.js","components/header/Header.jsx","utils/apiKey.js","redux/videos/actions.js","components/header/index.js","redux/favorites/actions.js","redux/theme/actions.js","components/videoCard/VideoCard.jsx","components/videoCard/index.js","components/videoPlayer/VideoPlayer.jsx","components/videoPlayer/index.js","components/favoriteVideos/FavoriteVideos.jsx","components/favoriteVideos/index.js","components/main/Main.jsx","components/main/index.js","components/home/Home.jsx","components/home/index.js","routes/privateRoutes/PrivateRoutes.jsx","routes/privateRoutes/index.js","routes/AppRouter.jsx","App.jsx","index.js"],"names":["initialState","isAuthorized","userName","videos","isPlayingVideoId","filterVideoStr","nextPageToken","initiallState","user","0","name","favoriteVideosIds","toggleFavorites","favoriteVideos","theme","rememberedUserPersistConfig","key","storage","authPersistConfig","checkedUserPersistConfig","favoriteVideosPersistConfig","themePersistConfig","rootReducer","combineReducers","auth","persistReducer","state","action","type","payload","video","checkedUser","rememberedUser","videoInFavorites","find","videoId","undefined","filter","id","themeApp","middleware","composeWithDevTools","applyMiddleware","thunk","logger","store","createStore","persistor","persistStore","validateLogin","values","errors","email","test","password","length","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","createAccount","fontSize","authUser","dispatch","HttpService","request","url","a","method","body","options","requestOptions","headers","JSON","stringify","fetch","response","parseResponse","ok","status","statusText","to","json","Promise","reject","get","post","mapDispatchToProps","checkUser","then","res","rememberUser","console","log","connect","classes","push","useHistory","useState","checked","setChecked","setAuth","useEffect","userData","formik","useFormik","initialValues","validate","onSubmit","loginLayout","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","handleSubmit","TextField","required","fullWidth","label","autoComplete","helperText","onChange","handleChange","value","FormControlLabel","control","Checkbox","Button","justify","Box","mt","validateForm","secondary","main","addUser","autoFocus","flexGrow","marginBottom","menuButton","marginRight","title","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","textAlign","text","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","list","fullList","Header","searchVideo","changeTeme","avatarLetter","substr","inputEl","useRef","menuIsOpen","setMenuIsOpen","rightMenuIsOpen","setRightMenuIsOpen","headerContainer","AppBar","Toolbar","IconButton","onClick","edge","aria-label","noWrap","InputBase","inputRef","current","toLowerCase","placeholder","input","inputProps","List","ListItem","button","ListItemText","primary","defaultPropTypes","api_key","videosUrl","filterStr","event","boxShadow","darkRoot","header","overflow","darkHeader","expand","transform","duration","shortest","expandOpen","red","titleAvatar","arrLetters","split","slice","toString","charAt","showVideoInPayer","addIdVideoToFavorite","addFavoriteVideo","favoriteVideo","setVideoPlayer","date","description","img","favoriteIconColor","expanded","setExpanded","objFavoriteVideo","Card","CardHeader","subheader","CardContent","setTimeout","window","scrollTo","src","alt","CardActions","disableSpacing","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","VideoPlayer","FavoriteVideos","isVideoPlayer","alignContent","map","card","index","videoID","favoriteVideosId","startsWith","Main","showMoreVideos","videosLayout","snippet","publishedAt","thumbnails","medium","pageToken","items","darkTeme","minHeight","getVideos","includes","Container","maxWidth","PrivateRoutes","routes","exact","path","Home","redirect","defaultProps","AppRouter","from","Login","FormRegister","App","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9b23fa24.chunk.js","sourcesContent":["import { AUTH_USER, LOG_OUT } from './actionTypes';\n\nconst initialState = {\n  isAuthorized: false,\n  userName: '',\n};\n\nexport const authReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case AUTH_USER:\n      return {\n        ...state,\n        isAuthorized: payload.isAuthorized,\n        userName: payload.name,\n      };\n    case LOG_OUT:\n      return initialState;\n    default:\n      return state;\n  }\n};\n","import { GET_VIDEOS, GET_VIDEO_ID, FIND_VIDEO, GET_NEXT_PAGE_TOKEN } from './actionTypes';\n\nconst initialState = {\n  videos: [],\n  isPlayingVideoId: '',\n  filterVideoStr: '',\n  nextPageToken: '',\n};\n\nexport const videoReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_VIDEOS:\n      return {\n        ...state,\n        videos: [...state.videos, ...payload],\n      };\n    case GET_VIDEO_ID:\n      return {\n        ...state,\n        isPlayingVideoId: payload,\n      };\n    case FIND_VIDEO:\n      return {\n        ...state,\n        filterVideoStr: payload,\n      };\n    case GET_NEXT_PAGE_TOKEN:\n      return {\n        ...state,\n        nextPageToken: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { CHECKED_USER } from './actionTypes';\n\nconst initiallState = {\n  user: { 0: { name: '' } },\n\n};\n\nexport const checkedUserReducer = (state = initiallState, action) => {\n  const { type, payload } = action;\n  //console.log('1', payload)\n  switch (type) {\n    case CHECKED_USER:\n      return {\n        ...state,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { ADD_FAVORITE_VIDEO, TOGGLE_FAVORITE_VIDEOS, ADD_FAVORITE_VIDEO_ID } from './actionTypes';\n\nconst initialState = {\n  favoriteVideosIds: [],\n  toggleFavorites: false,\n  favoriteVideos: [],\n};\n\nexport const favoriteVideoReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case ADD_FAVORITE_VIDEO_ID: {\n      const { favoriteVideosIds } = state;\n      const videoInFavorites = favoriteVideosIds.find(videoId => videoId === payload);\n\n      if (videoInFavorites !== undefined) {\n        return {\n          ...state,\n          favoriteVideosIds: favoriteVideosIds.filter(id => id !== payload),\n        };\n      }\n\n      return {\n        ...state,\n        favoriteVideosIds: [...favoriteVideosIds, payload],\n      };\n    }\n    case TOGGLE_FAVORITE_VIDEOS:\n      return {\n        ...state,\n        toggleFavorites: payload,\n      };\n    case ADD_FAVORITE_VIDEO:\n      {\n        const { favoriteVideos } = state;\n        const videoInFavorites = favoriteVideos.find(video => video.id === payload.id);\n\n        if (videoInFavorites !== undefined) {\n          return {\n            ...state,\n            favoriteVideos: favoriteVideos.filter(video => video.id !== payload.id),\n          };\n        }\n      }\n      return {\n        ...state,\n        favoriteVideos: [...state.favoriteVideos, payload],\n      };\n\n    default:\n      return state;\n  }\n};\n","import { REMEMBER_USER } from './actionTypes';\n\nconst initiallState = {\n  user: {},\n};\n\nexport const rememberedUserReducer = (state = initiallState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case REMEMBER_USER:\n      return {\n        ...state,\n        user: payload,\n      };\n    default:\n      return state;\n  }\n};","import { CHANGE_THEME } from './actionTypes';\n\nconst initialState = {\n  theme: 'Light',\n};\n\nexport const themeReducer = (state = initialState, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CHANGE_THEME:\n      return {\n        ...state,\n        theme: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nimport { authReducer } from './auth/reducer';\nimport { videoReducer } from './videos/reducer';\nimport { checkedUserReducer } from './checkedUser/reducer';\nimport { favoriteVideoReducer } from './favorites/reducer';\nimport { rememberedUserReducer } from './rememberedUser/reducer';\nimport { themeReducer } from './theme/reducer';\n\nconst rememberedUserPersistConfig = {\n  key: 'rememberedUser',\n  storage,\n};\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n};\n\nconst checkedUserPersistConfig = {\n  key: 'checkedUser',\n  storage,\n};\n\nconst favoriteVideosPersistConfig = {\n  key: 'favoriteVideos',\n  storage,\n};\n\nconst themePersistConfig = {\n  key: 'theme',\n  storage,\n};\n\nexport const rootReducer = combineReducers({\n  auth: persistReducer(authPersistConfig, authReducer),\n  video: videoReducer,\n  checkedUser: persistReducer(checkedUserPersistConfig, checkedUserReducer),\n  rememberedUser: persistReducer(rememberedUserPersistConfig, rememberedUserReducer),\n  favoriteVideos: persistReducer(favoriteVideosPersistConfig, favoriteVideoReducer),\n  themeApp: persistReducer(themePersistConfig, themeReducer),\n});\n","export const AUTH_USER = 'AUTH_USER';\nexport const LOG_OUT = 'LOG_OUT';\n","export const GET_VIDEOS = 'GET_VIDEOS';\nexport const GET_VIDEO_ID = 'GET_VIDEO_ID';\nexport const FIND_VIDEO = 'FIND_VIDEO';\nexport const GET_NEXT_PAGE_TOKEN = 'GET_NEXT_PAGE_TOKEN';\n","export const CHECKED_USER = 'CHECKED_USER';\n","export const REMEMBER_USER = 'REMEMBER_USER';\n","export const ADD_FAVORITE_VIDEO = 'ADD_FAVORITE_VIDEO';\nexport const TOGGLE_FAVORITE_VIDEOS = 'TOGGLE_FAVORITE_VIDEOS';\nexport const ADD_FAVORITE_VIDEO_ID = 'ADD_FAVORITE_VIDEO_ID';\n","export const CHANGE_THEME = 'CHANGE_THEME';\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\n\nimport { rootReducer } from './reducers';\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk, logger));\nexport const store = createStore(rootReducer, middleware);\n\nexport const persistor = persistStore(store);\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { objectOf, string, func } from 'prop-types';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useFormik } from 'formik';\n\nconst validateLogin = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 6) {\n    errors.password = 'Must be 6 characters or more, 1 big letter, 1 small letter and 1 digit';\n  } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(values.password)) {\n    errors.password = 'Must be at list 1 big letter, 1 small letter and 1 digit';\n  } else if (/\\W/.test(values.password)) {\n    errors.password = 'Only letters and digits are supported';\n  }\n\n  return errors;\n};\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>\n      {new Date().getFullYear()}\n    </Typography>\n  );\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#f44336',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  createAccount: {\n    fontSize: '30px',\n  },\n}));\n\nexport const Login = ({ authUser, checkedUser, rememberedUser, checkUser, rememberUser }) => {\n  const classes = useStyles();\n  const { push } = useHistory();\n  const [checked, setChecked] = useState(false);\n  const [auth, setAuth] = useState(true);\n  const submiting = () => {\n    checkUser(formik.values.email, formik.values.password);\n\n    // if (Object.keys(checkedUser).length === 0) {\n    if (checkedUser[0].name === '') {\n      setAuth(false);\n    }\n  };\n\n  useEffect(() => {\n    // if (Object.keys(checkedUser).length !== 0) {\n    if (checkedUser[0].name !== '') {\n      const userData = {\n        isAuthorized: true,\n        name: checkUser.name,\n      };\n      authUser(userData);\n      push('/home');\n    }\n\n    // eslint-disable-next-line\n  }, [checkedUser]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '' || rememberedUser.email,\n      password: '' || rememberedUser.password,\n    },\n    validate: validateLogin,\n    onSubmit: () => {\n      submiting();\n    },\n  });\n\n  const rememberMe = () => {\n    const user = { name: formik.values.name, email: formik.values.email, password: formik.values.password };\n    rememberUser(user);\n    setChecked(true);\n  };\n\n  const loginLayout = (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar} />\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              helperText={formik.errors.email}\n              type=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              helperText={formik.errors.password}\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n            <FormControlLabel\n              control={<Checkbox checked={checked} value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n              onChange={rememberMe}\n            />\n            {auth && (\n              <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                Sign In\n              </Button>\n            )}\n\n            <Grid container justify=\"center\">\n              {auth ? (\n                <Grid item>\n                  <Link href=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              ) : (\n                  <Link className={classes.createAccount} href=\"/register\" variant=\"body2\">\n                    {'Create account'}\n                  </Link>\n                )}\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n\n  return <>{loginLayout}</>;\n};\n\nLogin.propTypes = {\n  authUser: func.isRequired,\n  checkedUser: objectOf(string).isRequired,\n  rememberedUser: objectOf(string).isRequired,\n  checkUser: func.isRequired,\n  rememberUser: func.isRequired,\n};\n","import { AUTH_USER, LOG_OUT } from './actionTypes';\nimport { CHECKED_USER } from '../checkedUser/actionTypes';\n\nexport const authUser = ({ isAuthorized, name }) => dispatch => {\n  return isAuthorized\n    ? dispatch({\n        type: AUTH_USER,\n        payload: { isAuthorized, name },\n      })\n    : (dispatch({ type: LOG_OUT, payload: { isAuthorized } }),\n      dispatch({ type: CHECKED_USER, payload: { 0: { name: '' } } }));\n};\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n//const baseUrl = 'https://www.googleapis.com/youtube/v3/videos';\n\nexport class HttpService {\n  static request = async (url, method = 'GET', body = null, options = {}) => {\n    const requestOptions = {\n      method,\n      ...options,\n      headers: {\n        'Content-type': 'application/json',\n        ...options.headers,\n      },\n    };\n\n    if (body) {\n      requestOptions.body = JSON.stringify(body);\n    }\n\n    const response = await fetch(`${url}`, requestOptions);\n\n    return this.parseResponse(response);\n  };\n\n  static parseResponse = async response => {\n    const { ok, status, statusText } = response;\n\n    if (status === 401) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    if (ok) {\n      return response.json();\n    }\n\n    return Promise.reject(statusText);\n  };\n\n  static get = (url, options) => {\n    return this.request(url, 'GET', null, options);\n  };\n\n  static post = (url, body, options) => {\n    /**\n     * @param {string} url\n     * @param {object} body\n     * @param {object} options\n     */\n\n    return this.request(url, 'POST', body, options);\n  };\n}\n","import { CHECKED_USER } from './actionTypes';\nimport { HttpService } from '../../services/HttpService';\n\nexport const addUser = user => dispatch => {\n  HttpService.post('http://localhost:3002/users', user);\n};\n\nexport const checkUser = (email, password) => dispatch => {\n  HttpService.get(`http://localhost:3002/users?email=${email}&password=${password}`).then(res => {\n   // console.log('nnn', res)\n    if (res.length !== 0) {\n      dispatch({\n        type: CHECKED_USER,\n        payload: { ...res },\n      });\n    }\n  });\n};\n","import { connect } from 'react-redux';\n\nimport { Login } from './Login';\nimport { authUser } from '../../redux/auth/actions';\nimport { checkUser } from '../../redux/checkedUser/actions';\nimport { rememberUser } from '../../redux/rememberedUser/actions';\n\nconst mapStateToProps = state => ({\n  checkedUser: state.checkedUser.user,\n  rememberedUser: state.rememberedUser.user,\n});\n\nconst mapDispatchToProps = {\n  authUser,\n  checkUser,\n  rememberUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { REMEMBER_USER } from './actionTypes';\n\nexport const rememberUser = user => dispatch => {\n  console.log('userRemember', user)\n  dispatch({\n    type: REMEMBER_USER,\n    payload: { ...user },\n  });\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { func } from 'prop-types';\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { useFormik } from 'formik';\n\nconst validateForm = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = 'Required';\n  } else if (values.name.length < 2) {\n    errors.name = 'Must be 2 characters or more';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  if (!values.password) {\n    errors.password = 'Required';\n  } else if (values.password.length < 6) {\n    errors.password = 'Must be 6 characters or more and 1 big letter, 1 small letter and 1 digit';\n  } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(values.password)) {\n    errors.password = 'Must be at list 1 big letter, 1 small letter and 1 digit';\n  } else if (/\\W/.test(values.password)) {\n    errors.password = 'Only letters and digits are supported';\n  }\n\n  return errors;\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const FormRegister = ({ authUser, addUser }) => {\n  const classes = useStyles();\n  const { push } = useHistory();\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validate: validateForm,\n    onSubmit: () => {\n      const user = {\n        name: formik.values.name,\n        email: formik.values.email,\n        password: formik.values.password,\n      };\n      addUser(user);\n\n      const userData = {\n        isAuthorized: true,\n        name: formik.values.name,\n      };\n      authUser(userData);\n      push('/home');\n    },\n  });\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar} />\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          <form className={classes.form} onSubmit={formik.handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"name\"\n              label=\"Enter your name\"\n              name=\"name\"\n              autoComplete=\"name\"\n              autoFocus\n              helperText={formik.errors.name}\n              type=\"name\"\n              onChange={formik.handleChange}\n              value={formik.values.name}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              helperText={formik.errors.email}\n              type=\"email\"\n              onChange={formik.handleChange}\n              value={formik.values.email}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              helperText={formik.errors.password}\n              onChange={formik.handleChange}\n              value={formik.values.password}\n            />\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n              Register\n            </Button>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nFormRegister.propTypes = {\n  authUser: func.isRequired,\n  addUser: func.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport { FormRegister } from './FormRegister';\nimport { authUser } from '../../redux/auth/actions';\nimport { addUser } from '../../redux/checkedUser/actions';\n\nconst mapDispatchToProps = {\n  authUser,\n  addUser,\n};\n\nexport default connect(null, mapDispatchToProps)(FormRegister);\n","import React, { useRef, useState } from 'react';\nimport { func, string } from 'prop-types';\n\nimport { Grid } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport './styles.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: 'black',\n    marginBottom: theme.spacing(3),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    color: '#f44336',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n    headerContainer: {\n      marginBottom: theme.spacing(3),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#f44336',\n  },\n}));\n\nexport const Header = ({ searchVideo, toggleFavorites, authUser, userName, checkedUser, changeTeme, theme }) => {\n  const avatarLetter = userName.substr(0, 1) || checkedUser.substr(0, 1);\n\n  const themeApp = theme === 'Dark' ? 'Light' : 'Dark';\n  const classes = useStyles();\n  const inputEl = useRef(null);\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\n  const [rightMenuIsOpen, setRightMenuIsOpen] = useState(false);\n\n  return (\n    <>\n      <Grid container className={classes.headerContainer}>\n        <Grid item xs={12}>\n          <AppBar className={classes.root} position=\"static\">\n            <Toolbar>\n              <IconButton\n                onClick={() => setMenuIsOpen(true)}\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.title} variant=\"h5\" noWrap>\n                The territory of pop music\n              </Typography>\n              <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase\n                  inputRef={inputEl}\n                  onChange={() => searchVideo(inputEl.current.value.toLowerCase())}\n                  placeholder=\"Search…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{ 'aria-label': 'search' }}\n                />\n              </div>\n              <Avatar aria-label=\"recipe\" className={classes.avatar} onClick={() => setRightMenuIsOpen(true)}>\n                {avatarLetter}\n              </Avatar>\n            </Toolbar>\n          </AppBar>\n        </Grid>\n      </Grid>\n      {menuIsOpen && (\n        <Grid container className=\"menu-container\" onClick={() => setMenuIsOpen(false)}>\n          <Grid className=\"menu-list\" item xs={3}>\n            <List>\n              <ListItem button key=\"Favorites videos\" onClick={() => toggleFavorites(true)}>\n                <ListItemText primary=\"Favorites videos\" />\n              </ListItem>\n              <ListItem button key=\"All videos\" onClick={() => toggleFavorites(false)}>\n                <ListItemText primary=\"All videos\" />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      )}\n      {rightMenuIsOpen && (\n        <Grid container className=\"right-menu-container\" onClick={() => setRightMenuIsOpen(false)}>\n          <Grid className=\"menu-list\" item xs={3}>\n            <List>\n              <ListItem button key=\"Log out\" onClick={() => authUser({ isAuthorized: false })}>\n                <ListItemText primary=\"Log out\" />\n              </ListItem>\n              <ListItem button key=\"Dark theme\" onClick={() => changeTeme(themeApp)}>\n                <ListItemText primary={`${themeApp} theme`} />\n              </ListItem>\n            </List>\n          </Grid>\n        </Grid>\n      )}\n    </>\n  );\n};\n\nHeader.propTypes = {\n  searchVideo: func.isRequired,\n  toggleFavorites: func.isRequired,\n  authUser: func.isRequired,\n  userName: string,\n  checkedUser: string,\n  changeTeme: func.isRequired,\n  theme: string.isRequired,\n};\n\nHeader.defaultPropTypes = {\n  userName: '',\n  checkedUser: '',\n};\n","export const api_key = 'AIzaSyCvZEBkGtjpyKHBONefOUDfoT1Zgyftn2I';\n","import { GET_VIDEOS, GET_VIDEO_ID, FIND_VIDEO, GET_NEXT_PAGE_TOKEN } from './actionTypes';\nimport { HttpService } from '../../services/HttpService';\nimport { api_key } from '../../utils/apiKey';\n\nconst videosUrl = 'https://www.googleapis.com/youtube/v3/videos';\n\nexport const getVideos = () => dispatch => {\n  HttpService.get(\n    `${videosUrl}?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=9&regionCode=US&key=${api_key}`,\n  )\n    .then(videos => {\n      return videos;\n    })\n    .then(videos => {\n      dispatch({ type: GET_VIDEOS, payload: videos.items });\n      dispatch({ type: GET_NEXT_PAGE_TOKEN, payload: videos.nextPageToken });\n    });\n};\n\nexport const showVideoInPayer = id => dispatch => {\n  dispatch({ type: GET_VIDEO_ID, payload: id });\n};\n\nexport const searchVideo = filterStr => dispatch => {\n  dispatch({ type: FIND_VIDEO, payload: filterStr });\n};\n\nexport const showMoreVideos = pageToken => dispatch => {\n  HttpService.get(\n    `${videosUrl}?pageToken=${pageToken}&part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=9&regionCode=US&key=${api_key}`,\n  )\n    .then(videos => {\n      return videos;\n    })\n    .then(videos => {\n      dispatch({ type: GET_VIDEOS, payload: videos.items });\n      dispatch({ type: GET_NEXT_PAGE_TOKEN, payload: videos.nextPageToken });\n    });\n};\n","import { connect } from 'react-redux';\n\nimport { Header } from './Header';\nimport { searchVideo } from '../../redux/videos/actions';\nimport { toggleFavorites } from '../../redux/favorites/actions';\nimport { authUser } from '../../redux/auth/actions';\nimport { changeTeme } from '../../redux/theme/actions';\n\nconst mapStateToProps = state => ({\n  checkedUser: state.checkedUser.user[0].name,\n  userName: state.auth.userName,\n  theme: state.themeApp.theme,\n});\n\nconst mapDispatchToProps = {\n  searchVideo,\n  toggleFavorites,\n  authUser,\n  changeTeme,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import { ADD_FAVORITE_VIDEO, TOGGLE_FAVORITE_VIDEOS, ADD_FAVORITE_VIDEO_ID } from './actionTypes';\n\nexport const addIdVideoToFavorite = id => dispatch => {\n  dispatch({ type: ADD_FAVORITE_VIDEO_ID, payload: id });\n};\n\nexport const toggleFavorites = event => dispatch => {\n  dispatch({ type: TOGGLE_FAVORITE_VIDEOS, payload: event });\n};\n\nexport const addFavoriteVideo = favoriteVideo => dispatch => {\n  dispatch({ type: ADD_FAVORITE_VIDEO, payload: favoriteVideo });\n};\n","import { CHANGE_THEME } from './actionTypes';\n\nexport const changeTeme = theme => dispatch => {\n  dispatch({\n    type: CHANGE_THEME,\n    payload: theme,\n  });\n};\n","import React, { useState } from 'react';\nimport { string, func, object } from 'prop-types';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport './styles.scss';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '&:hover': {\n      boxShadow: '0 0 10px rgba(0,0,0,0.5)',\n    },\n  },\n  darkRoot: {\n    backgroundColor: '#262626',\n  },\n  header: { height: '80px', overflow: 'hidden' },\n  darkHeader: {\n    color: '#fff',\n    height: '80px',\n    overflow: 'hidden',\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nconst titleAvatar = title => {\n  const arrLetters = title.split(' ');\n  return [\n    ...arrLetters\n      .slice(0, 1)\n      .toString()\n      .charAt(0),\n  ];\n};\n\nexport const VideoCard = ({\n  setVideoPlayer,\n  title,\n  date,\n  description,\n  img,\n  id,\n  favoriteIconColor,\n  showVideoInPayer,\n  addIdVideoToFavorite,\n  addFavoriteVideo,\n  theme,\n}) => {\n  const { url } = img;\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const objFavoriteVideo = { title, date, description, img, id };\n\n  const scrollToTop = () => {\n    // eslint-disable-next-line no-undef\n    setTimeout(() => window.scrollTo(0, 0), 1000);\n  };\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={theme === 'Light' ? classes.root : classes.darkRoot}>\n      <CardHeader\n        className={theme === 'Light' ? classes.header : classes.darkHeader}\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {titleAvatar(title)}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={title}\n        subheader={date}\n      />\n      <CardContent>\n        <div\n          className=\"poster-container\"\n          onClick={() => {\n            showVideoInPayer(id);\n            setVideoPlayer(true);\n            scrollToTop();\n          }}\n        >\n          <img className=\"poster-img\" src={url} alt=\"poster\" />\n        </div>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          color={favoriteIconColor}\n          onClick={() => {\n            addIdVideoToFavorite(id);\n            addFavoriteVideo(objFavoriteVideo);\n          }}\n          aria-label=\"add to favorites\"\n        >\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <div className={theme === 'Dark' && 'description-dark-theme'}>{description}</div>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nVideoCard.propTypes = {\n  setVideoPlayer: func.isRequired,\n  title: string.isRequired,\n  date: string.isRequired,\n  description: string.isRequired,\n  img: object.isRequired,\n  id: string.isRequired,\n  favoriteIconColor: string.isRequired,\n  showVideoInPayer: func.isRequired,\n  addIdVideoToFavorite: func.isRequired,\n  addFavoriteVideo: func.isRequired,\n  theme: string.isRequired,\n};\n","import { connect } from 'react-redux';\n\nimport { VideoCard } from './VideoCard';\nimport { showVideoInPayer } from '../../redux/videos/actions';\nimport { addIdVideoToFavorite, addFavoriteVideo } from '../../redux/favorites/actions';\n\nconst mapStateToProps = state => ({\n  theme: state.themeApp.theme,\n});\n\nconst mapDispatchToProps = {\n  showVideoInPayer,\n  addIdVideoToFavorite,\n  addFavoriteVideo,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoCard);\n","import React from 'react';\n\nimport Iframe from 'react-iframe';\nimport { string } from 'prop-types';\n\nimport { Grid } from '@material-ui/core';\n\nimport './styles.scss';\n\nexport const VideoPlayer = ({ isPlayingVideoId, className }) => {\n  if (isPlayingVideoId === '') {\n    isPlayingVideoId = 'g04BtfhICzc';\n  }\n\n  const url = `https://www.youtube.com/embed/${isPlayingVideoId}`;\n\n  return (\n    <Grid container className={className} justify=\"center\">\n      <Grid item xs={12}>\n        <div className=\"video-container\">\n          <Iframe\n            url={`${url}?autoplay=1&mute=0`}\n            width=\"100%\"\n            height=\"100%\"\n            id=\"myId\"\n            className=\"main-video\"\n            position=\"absolute\"\n          />\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nVideoPlayer.propTypes = {\n  isPlayingVideoId: string,\n  className: string.isRequired,\n};\n\nVideoPlayer.defaultPropTypes = {\n  isPlayingVideoId: '',\n};\n","import { connect } from 'react-redux';\n\nimport { VideoPlayer } from './VideoPlayer';\n\nconst mapStateToProps = state => ({\n  isPlayingVideoId: state.video.isPlayingVideoId,\n});\n\nexport default connect(mapStateToProps, null)(VideoPlayer);\n","import React, { useState } from 'react';\nimport { arrayOf, string, object } from 'prop-types';\nimport { Grid } from '@material-ui/core';\n\nimport VideoCard from '../videoCard';\nimport VideoPlayer from '../videoPlayer';\n\nexport const FavoriteVideos = ({ favoriteVideosIds, favoriteVideos, className }) => {\n  const [isVideoPlayer, setVideoPlayer] = useState(false);\n  return (\n    <>\n      {isVideoPlayer && <VideoPlayer className={className} />}\n      <Grid container className={className} spacing={3} alignContent=\"center\">\n        {favoriteVideos.map((card, index) => (\n          <Grid key={card.id + index} item xs={4}>\n            <VideoCard\n              setVideoPlayer={setVideoPlayer}\n              title={card.title}\n              date={card.date}\n              description={card.description}\n              img={card.img}\n              id={card.id}\n              favoriteIconColor={\n                favoriteVideosIds.filter(videoID => videoID === card.id).length !== 0 ? 'secondary' : 'default'\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nFavoriteVideos.propTypes = {\n  favoriteVideosId: arrayOf(string),\n  favoriteVideos: arrayOf(object),\n  className: string,\n};\n\nFavoriteVideos.defaultPropTypes = {\n  favoriteVideosId: [],\n  favoriteVideos: [],\n};\n","import { connect } from 'react-redux';\n\nimport { FavoriteVideos } from './FavoriteVideos';\n\nconst mapStateToProps = state => ({\n  favoriteVideosIds: state.favoriteVideos.favoriteVideosIds,\n  favoriteVideos: state.favoriteVideos.favoriteVideos.filter(video =>\n    video.title.toLowerCase().startsWith(state.video.filterVideoStr),\n  ),\n});\n\nexport default connect(mapStateToProps, null)(FavoriteVideos);\n","import React, { useState } from 'react';\nimport { func, arrayOf, object, string, bool } from 'prop-types';\n\nimport { Grid } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\n\nimport VideoCard from '../videoCard';\nimport FavoriteVideos from '../favoriteVideos';\nimport VideoPlayer from '../videoPlayer';\n\nimport './styles.scss';\n\nexport const Main = ({ videos, favoriteVideosIds, toggleFavorites, nextPageToken, showMoreVideos, className }) => {\n  const [isVideoPlayer, setVideoPlayer] = useState(false);\n  const videosLayout = (\n    <>\n      {isVideoPlayer && <VideoPlayer className={className} />}\n      <Grid container className={className} spacing={3} alignContent=\"center\">\n        {videos.map((card, index) => (\n          <Grid key={card.id + index} item xs={4}>\n            <VideoCard\n              setVideoPlayer={setVideoPlayer}\n              title={card.snippet.title}\n              date={card.snippet.publishedAt}\n              description={card.snippet.description}\n              img={card.snippet.thumbnails.medium}\n              id={card.id}\n              favoriteIconColor={\n                favoriteVideosIds.filter(videoID => videoID === card.id).length !== 0 ? 'secondary' : 'default'\n              }\n            />\n          </Grid>\n        ))}\n      </Grid>\n      <Grid className=\"pagination\">\n        <Button\n          className=\"btn-pagination\"\n          type=\"button\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => showMoreVideos(nextPageToken)}\n        >\n          Show more\n        </Button>\n      </Grid>\n    </>\n  );\n  return <>{!toggleFavorites ? videosLayout : <FavoriteVideos className={className} />}</>;\n};\n\nMain.propTypes = {\n  videos: arrayOf(object).isRequired,\n  favoriteVideos: arrayOf(string),\n  toggleFavorites: bool.isRequired,\n  nextPageToken: string,\n  showMoreVideos: func.isRequired,\n  className: string.isRequired,\n};\n\nMain.defaultPropTypes = {\n  favoriteVideos: [],\n  nextPageToken: '',\n};\n","import { connect } from 'react-redux';\n\nimport { Main } from './Main';\nimport { showMoreVideos } from '../../redux/videos/actions';\n\nconst mapStateToProps = state => ({\n  videos: state.video.videos.filter(video => video.snippet.title.toLowerCase().startsWith(state.video.filterVideoStr)),\n  favoriteVideosIds: state.favoriteVideos.favoriteVideosIds,\n  toggleFavorites: state.favoriteVideos.toggleFavorites,\n  nextPageToken: state.video.nextPageToken,\n});\n\nconst mapDispatchToProps = {\n  showMoreVideos,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","import React, { useEffect } from 'react';\nimport { func, string } from 'prop-types';\n\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Header from '../header';\nimport Main from '../main';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.spacing(3),\n  },\n  darkTeme: {\n    backgroundColor: '#000',\n    minHeight: '100vh',\n  },\n}));\n\nexport const Home = ({ getVideos, theme }) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n    getVideos();\n\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className={theme === 'Dark' ? classes.darkTeme : ''}>\n      <Container maxWidth=\"lg\">\n        <Header />\n        <Main className={classes.root} />\n      </Container>\n    </div>\n  );\n};\n\nHome.propTypes = {\n  getVideos: func.isRequired,\n  theme: string.isRequired,\n};\n","import { Home } from './Home';\n\nimport { connect } from 'react-redux';\n\nimport { getVideos } from '../../redux/videos/actions';\n\nconst mapStateToProps = state => ({\n  videos: state.video.videos.filter(video => video.snippet.title.includes(state.video.filterVideoStr)),\n  theme: state.themeApp.theme,\n});\n\nconst mapDispatchToProps = {\n  getVideos,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { bool } from 'prop-types';\n\nimport Home from '../../components/home';\n\nexport const PrivateRoutes = ({ isAuthorized }) => {\n  const routes = (\n    <Switch>\n      <Route exact path=\"/home\" component={Home} />\n    </Switch>\n  );\n\n  const redirect = <Redirect to=\"/login\" />;\n\n  return isAuthorized ? routes : redirect;\n};\n\nPrivateRoutes.propTypes = {\n  isAuthorized: bool,\n};\n\nPrivateRoutes.defaultProps = {\n  isAuthorized: false,\n};\n","import { connect } from 'react-redux';\n\nimport { PrivateRoutes } from './PrivateRoutes';\n\nconst mapStateToProps = state => {\n  return {\n    //isAuthorized: true,\n    isAuthorized: state.auth.isAuthorized,\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoutes);\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport Login from './logIn';\nimport FormRegister from '../components/formRegister';\nimport PrivateRoutes from './privateRoutes';\n\nexport const AppRouter = () => {\n  return (\n    <Switch>\n      <Redirect exact from=\"/\" to=\"/login\" />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={FormRegister} />\n      <PrivateRoutes />\n    </Switch>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AppRouter } from './routes/AppRouter';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n      <AppRouter />\n    </BrowserRouter>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor } from './redux/store';\n\nimport 'normalize.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}